from datetime import datetime

from django.shortcuts import render , redirect
from django.contrib.auth.decorators import login_required
from django.contrib.auth.mixins import LoginRequiredMixin
from django.urls import reverse_lazy

#views
from django.views.generic import ListView , DetailView , CreateView

#Forms
from posts.forms import PostForm

#Models
from posts.models import Post

# from django.http import HttpResponse
# Create your views here.

# Generated by https://quicktype.io

# Generated by https://quicktype.io

"""List post con clase """
class PostsListView(LoginRequiredMixin, ListView):
  """Return all published posts"""
  model = Post
  template_name = "posts/feed.html"
  ordering = ('-created')
  paginate_by = 30
  context_object_name = 'posts'


"""List post con metodo"""
# @login_required
# def list_posts(request):
  
#   posts = Post.objects.all().order_by('-created') #para que sean del mas nuevo al mas viejo 
#   return render(request, 'posts/feed.html', {'posts': posts})

"""Create post con clase """
class PostCreateView(LoginRequiredMixin, CreateView):
  template_name = "posts/new.html"
  form_class = PostForm
  success_url = reverse_lazy('posts:feed')

  def get_context_data(self, **kwargs):
    """User and profile to context"""
    context = super().get_context_data(**kwargs)
    context["user"] = self.request.user
    context["profile"] = self.request.user.profile
    return context
  



"""Crate post con metodo"""
# @login_required
# def create_post(request):
#   """Create new Post view"""
#   if  request.method == 'POST':
#     form = PostForm(request.POST, request.FILES)
#     if form.is_valid():
#       form.save()
#       return redirect('posts:feed')
#   else:
#     form = PostForm()

#   return render(
#     request = request,
#     template_name= 'posts/new.html',
#     context={
#       'form': form,
#       'user': request.user,
#       'profile': request.user.profile
#     }
#   )


class PostDetailView(LoginRequiredMixin, DetailView):
  """Return post detail."""

  template_name = 'posts/detail.html'
  queryset = Post.objects.all()
  context_object_name = 'post'

